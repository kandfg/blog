# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4.12-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      - image: circleci/mysql:5.7
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_USER: kandfg
          MYSQL_DATABASE: blog
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_PASSWORD: '123456'
    
      #
      # - image: redis:2.8.19

    steps:
      - checkout
      
      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip

      - run: sudo apt-get install libjpeg62-turbo-dev
      - run: sudo apt-get install libfreetype6-dev
      - run: sudo apt-get install libpng-dev
      - run: sudo docker-php-ext-configure gd --with-freetype --with-jpeg
      - run: sudo docker-php-ext-install -j$(nproc) gd
      - run: sudo apt install -y default-mysql-client
      - run: sudo docker-php-ext-install pdo_mysql
      - run: sudo composer self-update

      
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: composer install -n --prefer-dist
      - run: mv .env.testing .env

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      # - run:
      #     name: Mysql database
      #     command: mysql -h 127.0.0.1 -u kandfg -p 123456 -e "create database blog;"
      # prepare the database
      - run: php artisan key:generate
      - run: php artisan migrate --forces

      # run tests with phpunit or codecept
      - run: ./vendor/bin/phpunit
